%% 基础知识

%MATLAB:Matrix+Laboratory(常用的仿真软件-不是实验)
%MATLAB的基本数据单元是矩阵(数组)

% MATLAB是一种解释式语言,简单易学、代码短小高效、计算功能强大、图形绘制和处理容易、可扩展性强
% 1.矩阵的数值运算、数值分析、模拟
% 2.数据可视化、2D/3D的绘图
% 3.可以与FORTRAN、C/C++做数据链接
% 4.几百个核心内部函数
% 5.大量可选用的工具箱

% 版本尽量选择2020或者2022,相对较稳定
% 2022a的a是指测试版
% 2022b的b是指稳定版

%调用.m文件必须在同一文件夹下

%matlab代码(.m文件)和simulink(.mdl文件)和工作区数据(.mat文件)

%修改代码记得存档代码和注释修改时间,用节区分就好

% 知识点-指令窗的常用控制指令
% cd: 设置当前工作目录
% clf: 清除图形窗
% clc: 清除指令窗中显示内容
% help: 命令行窗口中函数的帮助
% demo: 在帮助浏览器中访问产品示例-代码案例
% doc: 帮助浏览器中的参考页
% clear: 清除MATLAB工作空间中保存的变量
% edit: 打开M文件编辑器exit
% quit: 退出MATLAB
% type: 显示指定M文件的内容
% ctrl+c: 中断一个Malab任务
% which: 指出其后M文件所在的目录

% 知识点-指令窗中指令行的编辑
% PageUp: 前寻式调回已输入过的指令行
% PageDown: 后寻式调回已输入过的指令行
% End: 在当前行中左移光标
% Home: 在当前行中右移光标
% Delete: 删去光标右边的字符
% Backspace: 删去光标左边的字符
% Esc: 清除当前行的全部内容

clc    %清空命令行窗口
clear  %清空工作区所有数据
close  %关闭所有图窗

% MATLAB中大小写需要区分
% 两个%为一节,每一节可以分开调试,方便编程测试


%A=[1;2;1;4;2;8;1;-2];  
%B=[3,4;5,6];  %逗号分列,分号分行

%例1:求解线性系统Ax=b,解x
%A=[3,1,-1;1,2,4;-1,4,5];
%b=[3.6;2.1;-1.4];
%x=A\b;

%例2:用简短命令计算并绘制在0≤x≤6范围内的sin(2x)、sin(x^2)、(sinx)^2
%生成线性间距向量:返回包含 0 和 6 之间的 100 个等间距点的行向量
x=linspace(0,6);
y1=sin(2*x);
y2=sin(x.^2);
y3=(sin(x)).^2;
plot(x,y1,x,y2,x,y3)
%可以使用hold on:添加新绘图时保留当前绘图

%matlab可以作为计算器使用,如果没有命名当前命令行的返回值,返回会显示ans(answer)

% 变量命名规则:
% 1.变量名、函数名是对字母大小写敏感的。
% 2.变量名的第一个字符必须是英文字母，最多可包含63个字符(英文、数字和下连符)。
% 3.变量名的最大长度对不同的版本是不同的，它可以调用函数namelengthmax得到。
% 4.变量名中不得包含空格、标点，但可以包含下连符。

% 定义变量名的两个忌讳:
% 1.不应与MATLAB关键词重名;
% 2.尽量不与MATLAB预定义变量名，函数名和文件夹名相同。

% MATLAB预定义变量及符号含义(matlab自带)
%
% ans:计算结果的缺省变量名
% eps:机器零阈值
% Inf或inf:无穷大,如1/0
% i或j:虚单元 4+5i 3+2j
% pi:圆周率π
% NaN或nan:不是一个数，如0/0,∞/∞,∞-∞
% nargin:函数输入宗量数目
% nargout:函数输出宗量数目
% realmax:最大正实数
% realmin:最小正实数

%MATLAB表达式的基本运算符
% + - * / \ ^ (加-减-乘-除-乘方)

%面向数组设计的运算(并行)
A=[1,3;2,4]-[5,8;6,9]*1i;
B=[1+5i,2+6i;3+8*1i,4+9*1i];
C=A*B;
%求复数实部、虚部、模和幅角
C_real=real(C);  %取出矩阵的实部数字
C_imag=imag(C);  %取出矩阵的虚部数字
C_magnitude=abs(C); %实部平方+虚部平方,再开根号
C_phase=angle(C)*180/pi; %arctan(虚部/实部),再进行幅度的转换

%注意:对复数进行方根运算，只能得到第一象限的根，如果求-8开3次方根得不到-2

% 标点符号和注释
% 逗号:a.输入数组时分隔数组中同一行中的数据-分列;
%      b.分隔命令窗口中同一命令行上的多个命令或语句;
%      c.输入量与输入量之间的分隔符;
% 分号:a.用作不显示计算结果指令的"结尾"标志;
%      b.用作数组的行间分隔符-分行;
% 括号:():在表达式中决定运算顺序，引用数组或矩阵下标，函数定义或调用时界定输入参数;
%      []:界定常数矩阵或数组，函数指令输出宗量列表时用;
%      {}:界定cell矩阵或cell数组;
% 百分号:%后至本行结束的文本均为注释,执行时忽略
% 冒号:a.用以生成一维数值数组;
%      b.用作单下标援引时，表示全部元素构成的长列;
%      c.用作多下标援引时，表示那维上的全部;

% Command History和实录指令diary
% Diary指令能产生"日志"文件，即把当前指令窗中的所有内容
% (包括指令、计算结果等)如实地记录为ASCII文件加以保存。
% 以diary filename开始, 以diary off结束
% 不带扩展名的“日志”文件可以用MATLAB的M文件编辑器或其他文本读写软件打开阅读和编辑。

% Workspace Browser和Array Editor
% 变量的字符显示: 鼠标左键双击变量
% 变量的图形显示: 右键--->Graph Selection
% 全部内存变量保存为MAT文件: 右键--->Save Workspace As
% 部分内存变量保存为MAT文件: 右键--->Save Selection As
% 用who,whos查阅MATLAB内存变量，用clear删除内存中的变量。

% 数据文件的存取-建议用到哪一个文件夹的时候专门新建一个文件来存放
% save filename: 把全部内存变量保存为flename.mat文件
% save filename vl v2: 把变量v1,v2保存为filename.mat文件
% save filename vl v2 -append: 把变量v1,v2添加到filename.mat文件中
% save filename vl v2 -ascii: 把变量v1,v2保存为filename8位ASCII文件
% save filename vl v2 -ascii-double: 把变量v1,v2保存为filename16位ASCII文件
% load filename: 把filename.mat文件中的全部变量装入内存
% load filename vl v2: 把filename.mat文件中的v1,v2变量装入内存
% load filename vl v2-ascii: 把filenameASCII文件中的v1,v2变量装入内存





%% 符号计算

% 2.1符号对象和符号表达式
%
% 生成符号对象:sym或syms - 后续再计算
% sym('a')
% syms varl var2 ... varn
% 变量间用空格而不要用逗号分隔。
a=3/4;        %实双精度浮点数值类型-8 double
b='3/4';      %实字符类型- 6 char
%c=sym(3/4);   %符号对象类型- 8 sym
d=sym('3/4'); %符号对象类型- 8 sym
% whos-列出工作区中的变量及大小和类型
% 例子如下 - 符号矩阵的每一行的两端都有方括号，这是与 Matlab数值矩阵的一个重要区别。
As = str2sym('[a,2*b;3*a,0]');


% 2.2符号数字及表达式的操作
%
% 1.符号数字与双精度数字之间的转换
Aa=[1/3,2.5;1/0.7,2/5];  %显示0.3333
sym(Aa)  %直接显示1/3
%
% 2.数值计算与符号计算的重要区别
% 数值计算一定存在截断误差，且在计算过程中不断传播，产生累积误差;
% 符号计算是在完全准确情况下进行的，不产生累计误差，但降低计算速度，增大内存需求。
% 例: 令a=sym(1/3),b=sym(1/3)进行a*b的运算,而不是(1/3)*(1/3) - 降低误差
%
% 3.任意精度算术运算
% digits(n) - 设置近似解的精度为n位有效数字，默认32位有效数字。
% vpa(x,n) - 求符号解的近似解，该近似解的有效位数由n来决定
%
% 4.恒等式简化:simplify,simple
% simplify()该函数是一个强有力的具有普遍意义的工具，它利用Maple化简规则对表达式进行简化。
% simple()用几种不同的算术简化规则对符号表达式进行简化，使其用最少的字符来表示。


% 2.3符号微积分
%
% 1.极限和求导
% limit(f,v,a)
% 注意: 对于极限不存在，返回NaN
% 示例如下:
limit(1/x,x,0)
limit(1/x,x,0, 'left')
limit(1/x,x,0, 'right' )
%
%求导: diff(fv,n) 数值计算中用来求差分
%例题: 在曲线y=x3+3x-2上哪一点的切线与直线y=4x-1平行。
x=sym('x');
y=x^3+3*x-2;  %定义曲线函数
f=diff(y);  %对曲线求导数
g=f-4;
solve(g)  %求方程f-4=0的根，即求曲线何处的导数为4
%
%2.序列/级数的符号求和
% symsum(f,v,a,b)-表达式f中变量v从a变到b时的有限和，自变量只取整数值。
%代码案例-求无穷级数的和:
syms k
s1=symsum(1/k^2,1,inf);
%
%3.符号积分
% 不定积分: int(f,v)
% 定积分: int(f,v,a,b)
% int('被积表达式','积分变量') —— 不定积分
% int('被积表达式','积分变量','积分上限','积分下限') —— 定积分
int(-2*x/(1+x^2)^2) %不定积分
int(log(x)) %不定积分
int(log10(x)) %不定积分
int(sin(x),x,-pi,pi) %定积分


%2.4求微分方程符号解的一般指令
%
% dsolve('eq1,eq2, … ,eqn','cond1,cond2, … ,condn','v')
%一阶微分方程
c=dsolve('Dx=y','Dy=-x','x(0)=0','y(0)=1');
c.x=sin(t);
c.y=cos(t);
% 初始条件少于微分方程数时，出现任意常数符C1，C2等
% 边值问题用数值计算方法求解复杂
% t为默认的独立变量
% Dny表示y的n阶导数
%ezplot(y)
%ezplot, get, set的配套使用
%ezplot不能同时画多条曲线，必须用循环解决。


%2.5符号矩阵分析和代数方程解
%
%符号矩阵分析
A=[1,2,3;2,3,4;3,4,5]
det(A)  %用于求A的行列式
diag(A) %返回包含主对角线上向量A的元素的对角矩阵 or 生成对角矩阵
[V,D]=eig(A); %返回特征值的对角矩阵D和矩阵V
expm(A) %用于计算矩阵的指数函数
inv(A)  %用于求取A的逆矩阵
poly(A) %用于求以向量为解的方程或方阵的特征多项式
rank(A) %用于计算矩阵的秩
rot90(A) %将矩阵A逆时针旋转90度
fliplr(A) %矩阵左右翻转
flipud(A) %矩阵上下翻转
tril(A) %产生或提取下三角矩阵
triu(A) %产生或提取上三角矩阵
A' %矩阵A的转置
size(A) %矩阵A的尺寸
length(A) %给出所有维中的最大长度
%一般代数方程组的解(包括线性,非线性和超越方程)
%例: f= ax2+bx+c 求解
f='a*x^2+b*x+c';
solve(f) %对缺省变量x求解
%
%maple函数--符号运算的扩展





%% 代码案例 - 多用help

A1 = [1 2 4;3 4 5;5 6 7];  %空格等同于逗号 - 分列
A2 = [1,2;3,4;5,6];

A3=[1:5];  %默认间隔为1
A4=[1:0.5:5];  %设定间隔为0.5

A4(1,2);  %取A4矩阵第1行第2列的数据
D = diag(A1);  %取出A1的对角线的数据

%生成线性间距向量:返回包含 -2 和 2 之间的 100 个等间距点的行向量
B=linspace(-2,2);
B=linspace(-2,2,10000); %手动设定10000个点

% rand - 均匀分布的随机数
%     此 MATLAB 函数 返回从区间 (0,1) 的均匀分布中得到的随机标量。
% randn - 正态分布的随机数
%     此 MATLAB 函数 返回一个从标准正态分布中得到的随机标量。
% randi - 均匀分布的伪随机整数
%     此 MATLAB 函数 返回一个介于 1 和 imax 之间的伪随机整数标量。

%随机取出(-1,1)中的值
(rand-0.5)*2;  %先转换至(-0.5,0.5),再乘2

% zeros - 创建全零数组
%     此 MATLAB 函数 返回标量 0。
% ones - 创建全部为 1 的数组
%     此 MATLAB 函数 返回标量 1。
% eye - 单位矩阵
%     此 MATLAB 函数 返回标量 1。

A=[0,0,0,0,0;0,0,0,0,0;5,4,3,2,1]; %原始输出方法
A=[zeros(1,5);zeros(1,5);linspace(5,1,5)]; %输出矩阵方法2

B=[1:5;-(1:5);1:5;-(1:5);1:5] %类似R语言的seq函数
B(6) %取出矩阵B的第6个元素 - 第一列开始从上往下数
B(1,2) %取出第1行第2列

% 稀疏矩阵: 矩阵中的数值为0的元素数目远远多于非0元素的数目，并且非0元素分布没有规律
% 稠密矩阵: 矩阵中的数值为非0元素数目占大多数
% 定义非零元素的总数比上矩阵所有元素的总数为矩阵的稠密度。

%构建矩阵C=[2,-1,0,0;-1,2,-1,0;0,-1,2,-1;0,0,-1,2]
n=4;
C=sparse(n,n); %制作一个4*4的全零稀疏矩阵
%方法1:使用diag方法
C=diag(2*ones(1,4))+diag((-1)*ones(1,3),1)+diag((-1)*ones(1,3),-1) %对角线填充不只是主对角线!
%
%方法2:使用diag方法
C([1,6,11,16])=2 %赋值矩阵C的第1,6,11,16号元素为2
C([2,5,7,10,12,15])=-1
% full - 将稀疏矩阵转换为满存储
%    此 MATLAB 函数 将稀疏矩阵 S 转换为满存储结构，这样 issparse(A) 返回逻辑值 0(false)。
full(C) %





%% 数据录入,处理与分析

% 录入数据
% 方法1:双击文件区域.mat文件
% 方法2:load('data1.mat')

%由于没有数据集案例,无法进行代码尝试,学习基础知识即可





%% 数值数组及向量化运算

% 向量化编程
% 在编程中，尽量避免使用循环，因为在循环中，内存不断重新分配，使计算速度变慢。

% "非数"和"空"数组
% NaN的性质
% 1.NaN参与运算所得的结果也是NaN，即具有传递性;
% 2.非数没有大小，因此不能比较。
% NaN的功用
% 1.真实记述0/0，∞/∞运算的后果;
% 2.避免可能因0/0，∞/∞运算而造成的程序执行的中断;
% 3.在数据可视化中，用来裁剪图形。
%
% "空"数组
% 1.不要把空数组和全零数组混淆;
% 2.不要把空数组看成虚无，它确实存在，whos;
% 3.空数组在运算中不具备传递性，对运算中出现的空结果解释要谨慎。
% 判别的唯一指令 isnan isempty
% 非数和空数组都属于特殊的double型数据

% 关系操作和逻辑操作
% > >= < <= == ~= & | ~ xor

% all()和 any()两个函数来对矩阵参数作逻辑判定
% all()函数在其中变元全部非 0 时返回 1，而 any()函数在变元有非零元素返回 1。
% find()函数将返回逻辑关系全部满足时的矩阵下标值，这个函数在编程中是相当常用。





%% 数值计算

% 1.常用的随机数组创建指令
% rand(m,n)--产生在(0，1)间均匀分布的(m*n)随机数组
% randn(m,n)--产生服从N(0,1)分布的(m*n)随机数组

% 2.常用的统计分析指令
% min(X) - 对X各列分别求最小值;
% max(X) - 对X各列分别求最大值;
% mean(X) - 对X各列分别求均值;
% std(X) - 对X各列分别求标准差;
% var(X) - 对X各列分别求方差;

% 3.多项式求根
% 命令格式: x=roots(A)
% 该命令求出多项式A的n个根，保存在列向量x中。
% 题目案例:试用ROOTS函数求多项式x^4+8x^3-10的根
% 分析:这是一个4次多项式(x^4+8x^3+0x^2+0x^1-10),它的五个系数依次为:1,8,0,0,-10
A = [1 8 0 0 -10];
x = roots(A)

% 4.由多项式的根重建多项式
% 若已知多项式的全部根，则可以用POLY函数重建该多项式;也可以用POLY函数求矩阵的特征多项式。
% POLY函数的调用格式是: A-poly(x)
% 若x为具有n个元素的向量，则poly(x)建立以x为其根的多项式，且将该多项式的系数赋值给向量A。
% 在此种情况下POLY与ROOTS互为逆函数:
% poly2str(A,'x’)根据多项式系数向量写出比较易读形式
z = poly(x)

% 5.多项式的四则运算 - 多项式加减
% 多项式加、减对于次数相同的若干个多项式，可直接对多项式系数向量进行加、减的运算。如果多项式的次数不同，
% 则应该对次数较低的多项式的在高次项系数的位置补零，使得各系数向量长度相同，然后才能相加。
% 实质为向量加法
A1 = [1 2 3 4 5 6]
B2 = [2 3 4 5 6 7]
A1 + B2
A1 - B2
%
% 6.多项式的四则运算 - 多项式乘法
% 若A、B是由多项式系数组成的向量，则CONV函数
% 将返回这两个多项式的乘积。调用它的命令格式为: C=conv(A,B)
% 命令的结果C为一个多项式(系数向量)。
% 题目案例:求前面例子中的4次多项式与多项式2x^2-x+3的乘积
A=[1 8 0 0 -10];
B=[2 -1 3];
C=conv(A,B)
% 本例的运行结果是求得一个6次多项式
%
% 7.多项式的四则运算 - 多项式除法
% 当A、B是由多项式系数组成的向量时，DECONV函数用来对两个多项式作除法运算。
% 调用的命令格式为: [Q,r]=deconv(A,B)
% 本命令的结果: Q为多项式A除以多项式B的商 ; r为余式，
% DECONV是CONV的逆函数，即有A=conv(B,Q)+r。
% 题目案例:试用例1的4次多项式与多项式2x^2-x+3相除
A=[1 8 0 0 -10];
B=[2 -1 3];
[P,r]=deconv(A,B)

% 8.多项式的值
% POLYVAL函数用来求代数多项式的值，调用的命令格式为:
% polyval(A,x)
% POLYVAL函数返回的多项式的值。若x为一数值，则Y也为一数值;
% 若x为向量或矩阵，则对向量或矩阵中的每个元素求多项式的值，结果与x的维数相同
% 题目案例:对前面例子中的4次多项式，分别取x=1.2和下面矩阵的2*3个元素为自变量计算该多项式的值。
A=[1 8 0 0 -10];
x=1.2;
y1=polyval(A,x)
x=[-1 1.2 -1.4;2 -1.8 1.6];
y2=polyval(A,x)

% 9.多项式微分
% 函数polyder多项式的微分运算，调用方法为: d =polyder(A)
% 上述语句完成对多项式A的微分，返回值为多项式d，其维数比A小1。其它调用方式参见联机文档。
% 题目案例:求多项式x^8+3x^6+5x^5+12x^4+36x^2+x+55的微分。
A=[1 0 3 5 12 0 36 1 55];
b=polyder(A) %求完微分会少一个项,因为常数项变成0了

% 10.有理分式的部分分式展开及组合
% 函数residue可以将有理分式展开成部分分式，或者将由部分分式表示的有理分式组合为分子除以分母的形式。
% 则函数调用:[r,p,k] = residue(b,a)
% 较为复杂,建议查看help指令

% 11.曲线拟合
% 我们经常要处理试验数据，有时需要知道两组试验数据间的函数关系，此时就需要用到曲线拟合的算法。
% 曲线拟合的常用方法为最小二乘法拟合;
% Matlab提供了对试验数据进行曲线拟合的函数polyfit。
% polyfit的调用格式: p = polyfit(x,y,n)
%
% 对数据x，y进行拟合，n表示拟合多项式的阶数，默认为一次曲线拟合，返回值p为拟合多项式。使用最小二乘法拟合。
% 【例】已知x=0:0.1:1，y=0.5+2*x^2 , 我们在向量y的每一项加一个-0.125~0.125间的随机数，然后对输出数据进行拟合。
x=0:0.1:1;
y=0.5-2*x.^2;
y1=y+(rand(size(y))-0.5)./2.5; %给试验数据加噪声
p1=polyfit(x,y1,1); %一次曲线拟合
p2=polyfit(x,y1,2); %二次曲线拟合
z1=polyval(p1,x); %计算拟合的函数值
z2=polyval(p2,x); 
plot(x,y1,'go',x,z1,'b-',x,z2,'r--',x,y,'k') %画出三条曲线
legend('y1','p1','p2','y') %图例
grid %网格线

% 12.插值
% 若已知函数在离散点上的值，为了能得到其它点上的函数值，我们需要在已知点间进行插值以求出我们关心的未知点的函数值。
% Matlab的一维插值函数为:
% yi = interpl(x,Y,xi)
% yi = interpl(Y,xi)
% yi = interpl(x,Y,xi,method)
% 其中前两种为线性插值，后一种可选择插值方式以得到更精确的结果。
%
% 【1】yi = interpl(x,Y,xi)
% 式中x，Y为已知函数值的自变量向量以及对应的已知函数值向量，二者长度应相同。
% 若Y为矩阵，则列数应等于x的长度，此时相当于同时对m个函数插值，每个函数对应Y的一行。
% xi为待插值的自变量向量。yi为插值结果，其行数同Y，列数同xi。
x =1:2:20;
y=sin(x);
xi=2:0.1:18;
yi1=sin(xi);
yi2=interpl(x,y,xi);
%
% 【2】yi = interpl(Y,xi)
% 同前，只是假定x=1:N，N为Y的长度或Y的列数
%
% 【3】yi = interpl(x,Y,xi,method)
% 同(1)，只是插值方法可选，且精度不同。
%
% 插值方法和意义
% 'nearest' - 与最近的点相同
% 'linear' - 线性插值
% 'spline' - 三次样条插值
% 'pchip' - 分段三次Hermit插值
% 'cubie' - 同上(三次多项式插值算法)

% 13.快速傅立叶变换和逆变换
% Xf=fft(Xt,N,DIM)
% Xt=ifft(Xf,N,DIM)
%【例】fft在信号分析中的应用。试用频谱分析方法从受噪声污染的信号y(t)=3sin5t-6cos9t+N(t)中鉴别出有用信号。
% 在此，N(t) ~ N(0.5)。
%数据绘图
clear
randn('state',0)
t=linspace(0,10,512);
y=3*sin(5*t)-6*cos(9*t)+5*randn(size(t));
plot(t,y)
%快速傅里叶变换 - 找到高频波
Y=fft(y);
Ts=t(2)-t(1)
Ws=2*pi/Ts;
Wn=Ws/2
w=linspace(0,Wn,length(t)/2);
Ya=abs(Y(1:length(t)/2));
plot(w,Ya)
%绘制有效信号图 - 去除噪声信号
ii=find(w<=20);
plot(w(ii),Ya(ii))
grid
xlabel('FrequencyRad/s')

% 14.数字滤波 - 查看help
%filter/lsim/initial
%y=filter(B,A,x)





%% 数据和函数的可视化

% 可视化只能表现有限区间
% 如何选取采样数据:能反映函数关系的本质，采样点数不足或过多的影响，

% 二维图形
%
%
% 1.Plot的基本调用格式:
% (1)plot(x,'s')
% X是实向量时，以该向量元素的下标为横坐标、元素值为纵坐标画出一条连续曲线;
% X是实矩阵时，按列绘制每列元素值相对其下标的曲线;
% X是复数矩阵时，则按列分别以元素实部和虚部为横、纵坐标绘制多条曲线;
%
% (2)plot(x,Y's’)
% X、Y是同维向量时，绘制以X、Y元素为横、纵坐标的曲线;
% X是向量，Y是有一维与X等维的矩阵时，则绘出多根不同色彩的曲线。曲线数等于Y阵的另一维数;
% 's'不加指定，则默认蓝色细实线
%【例】在区间0≤X≤2π内，绘制正弦曲线Y=SIN(X)，其程序为:
x=0:pi/100:2*pi;
y=sin(x);
plot(x,y)
%
% (3)plot(x1,yl,x2,y2,x3,y3,...)
% 分别以x1,x2,x3,….为X轴，以y1,y2,y3,...为Y轴，在同一幅图内绘制出多条曲线。
% plot(x,[y1,y2,y3,...])
% 以公共向量x为X轴，以y1,y2,y3,….为Y轴，在同一幅图内绘制出多条曲线。
%【例】同时绘制正、余弦两条曲线Y1=SIN(X)和Y2=COS(X)，其程序为:
x=0:pi/100:2*pi;
y1=sin(x);
y2=cos(x);
plot(x,y1,x,y2) %也可以写成 plot(x,[y1,y2])
%
%
% 2.线型与颜色:
% 在同一图形窗口中绘制多条曲线时，为了区分不同的曲线，有时需要改变曲线的线型/标记及颜色，
% 这可以通过在对plot调用时每条曲线的数据后加选项来完成，即:
% Plot(x1,y1,'cs',x2,y2,'cs')
% 函数调用中每三个输入参数为一组，分别决定曲线的横坐标，纵坐标以及线的属性。
% 其中cs为一字符串，用以控制对应曲线的颜色，数据点的标记，和线型。
% cs字符串的可选项和各可选项的意义见下页表格 - 绘图三参数(截图)
%
%【例】用不同线型和颜色绘制正弦和余弦曲线，其程序为:
x=0:pi/100:2*pi;
y1=sin(x);
y2=cos(x);
plot(x,y1,'go:',x,y2,'b-.+')
% 其中曲线属性参数 'go:' 和 'b-.+' 决定曲线的颜色和线型。g表示绿色，o表示数据点标记为圆圈，
% :表示线型为点线; b表示蓝色，+表示数据点标记为小十字，-.表示图形线型为点划线
%
%
% 3.坐标轴属性设置:
axis([xmin xmax ymin ymax]) %设定坐标轴的范围
axis auto    %使用缺省设置
axis square  %产生正方形坐标系
axis equal   %纵、横轴采用等长刻度
axis off     %关闭坐标系统
axis on      %显示坐标系统
%
%
% 4.图形标识:
title(S)   %书写图名
xlabel(S)  %横坐标轴名
ylable(S)  %纵坐标轴名
%legend(S1,S2,..,pos)  %绘制曲线所用线型、色彩或数据点形图例
text(xt,yt,S)  %在图面(xt,yt)坐标处书写字符注释 - anywhere


% subplot函数 - subplot(m,n,p)
% 该命令将当前图形窗口分成mxn个绘图区，即每行n个，共m行;
% 区号按行优先编号，且选定第p个区为当前活动区。


% 多图形窗口绘图
% 需要建立多个图形窗口，绘制并保持每一个窗口的图形，可以使用figure命令。
% 最简单的调用格式如下:
% figure ; H=figure ; figure(H);
% 每执行一次figure命令，就创建一个新的图形窗口，该窗口自动为当前绘图窗口;
% 若需要还可以返回该窗口的识别号码，该号码称为窗口句柄;
% 对于最后一种调用格式，若句柄H对应的窗口不存在，则生成该窗口，否则选择对应窗口为当前绘图窗口。
% 句柄显示在图形窗口的标题栏中，即图形窗口标题中数字，用户可通过句柄激活或关闭某图形窗口。
% axis、xlabel、title等改变图形属性及坐标系统属性的函数只对活动窗口有效。
%【例】重新绘制上例4个图形，要求在四个不同的窗口中画图，程序变动后如下:
x=linspace(0,2*pi,60);
y=sin(x);
z=cos(x);
t=sin(x)./(cos(x)+eps);
ct=cos(x)./(sin(x)+eps);
H1=figure; %创建新窗口
plot(x,y);
title('sin(x)');
axis([0 2*pi -1 1]);
H2=figure; %创建第二个窗口
plot(x,z);
title('cos(x)');
axis([0 2*pi -1 1]);
H3=figure; %创建第三个窗口
plot(x,t);
title('tangent(x)');
axis([0 2*pi -40 40]);
H4=figure; %创建第四个窗口
plot(x,ct);
title('cotangent(x)');
axis([0 2*pi -40 40]);


% hold命令
% 若需要在已存在图形窗口中用plot命令继续添加新的内容，可使用hold 命令。调用格式为:
% hold       切换图形保持状态
% hold on    设置图形保持状态
% hold off   清除图形保持状态
% 在hold on状态，下一个plot执行时只是将图形添加到当前绘图窗口中，否则将首先清除当前绘图窗口的内容，然后绘图。


% grid命令
% grid命令在当前绘图窗口的绘图区增加或去掉网格线，调用方式类似于hold。


% 特殊坐标图形
%
% 1.对数坐标图形
%(1)双对数坐标绘图函数 loglog(x,y)
%【例】绘制y=|1000sin(4x)|+1的双对数坐标图。程序为:
x=[0:0.1:2*pi];
y=abs(1000*sin(4*x))+1;
loglog(x,y);
%(2)半对数坐标绘图函数 semilogx , semilogy
%semilogx函数绘图时X轴为对数坐标，y轴为线性坐标:
x=[0:0.01:2*pi];
y=abs(1000*sin(4*x))+1;
semilogx(x,y)
%semilogy函数绘图时X轴为线性坐标，y轴为对数坐标:
x=[0:0.01:2*pi];
y=abs(1000*sin(4*x))+1;
semilogy(x,y);
%
% 2.极坐标图
% 函数polar(theta,rho)用来绘制极坐标图，theta为极坐标角度，rho为极坐标半径。
%【例】绘制sin(2*0)*cos(2*0)的极坐标图，程序为:
theta=[0:0.01:2*pi];
rho=sin(2*theta).*cos(2*theta);
polar(theta,rho);
title('polar plot');
%
% 3.双纵坐标图
plotyy(x1,y1,x2,y2)
% 以左、右不同纵轴绘制x1-y1,x2-y2两条曲线


% 其他图形函数
% 除plot等基本绘图命令外，Matlab系统提供了许多其它特殊二维绘图函数，详细的信息用户
% 可随时查阅在线帮助，其对应的M-file文件存放在系统\matlab\toolbox\matlab目录下。
% 下面列出常用二维图形函数 - 二维绘图函数小结(截图)


% 三维图形
% 1.plot3函数
% 最基本的三维图形函数为plot3，它是将二维函数plot的有关功能扩展到三维空间，用来绘制三维图形。
% 函数格式: plot3(x1,y1,z1,c1,x2,y2,z2,c2,...)
% 其中x1,y1,z1...表示三维坐标向量，c1，c2...表示线型或颜色、数据点形，除了坐标轴比plot多一个外，其参数的意义同plot。
% 函数功能:主要用来表现单参数的三维曲线。
%
%【例】绘制三维螺旋曲线，其程序为:
t=0:pi/50:10*pi;
y1=sin(t);
y2=cos(t);
plot3(y1,y2,t);
title('helix'),text(0,0,0,'origin');
xlabel('sin(t)');
ylabel('cos(t)');
zlabel('t');
grid;
%
% 2.mesh函数
% mesh函数用于绘制三维网格图。在不需要绘制特别精细的三维曲面结构图时，可以通过绘制三维网格图来表示三维曲面。
% 三维曲面的网格图最突出的优点是:它较好地解决了实验数据在三维空间的可视化问题。
% 函数格式:mesh(x,y,z,c)
% 其中x，y控制x和y轴坐标，矩阵z是由(x,y)求得z轴坐标，(x,y,z)组成了三维空间的网格点;
% c用于控制网格点颜色。
%
%【例】下列程序绘制三维网格曲面图
x=[0:0.15:2*pi];
y=[0:0.15:2*pi];
z=sin(y')*cos(x);
mesh(x,y,z)
%
% 3.surf函数
% sure用于绘制三维曲面图，各线条之间的补面用颜色填充。surf函数和mesh函数的调用格式一致。
% 函数格式:surf(x,y,z,c)
% 其中x，y控制x和y轴坐标，矩阵z是由x,y求得的曲面上z轴坐标。
% 【例】下列程序绘制三维曲面图形
x=[0:0.15:2*pi];
y=[0:0.15:2*pi]
z=sin(y')*cos(x)
surf(x,y,z);
title('3-Dsurf');

% 透视、镂空和裁切
hidden off  %透视被叠压的图形
hidden on   %消隐被叠压的图形
% Hidden指令对surf指令绘制的表面图不发生任何影响;
% 利用"非数"NaN对图形进行镂空处理;
% 如果为了看清图形需要表现切面，把被切部分强制为零;

% 二维半图指令pcolor,contour,contourf
pcolor      %伪彩图指令
contour     %等位线指令
contourf    %填色等位线指令
clabel      %标高指令:随机标识法、沿线标识法
% 四维表现
%1.用色图阵表现函数不同特征---准四维表现
%2.动画指令

% 三维图形的精细控制
% 1.视点控制
% 日常生活中从不同的视点观察物体，所看到的图形是不同的。同样，用户从不同的角度绘制的三维图形的形状也是不一样的。视点位置可由方位角和仰角表示，
% 方位角又称旋转角，它是视点位置在XY平面上的投影与X轴形成的角度，正值表示逆时针，负值表示顺时针。
% 仰角又称视角，它是XY平面的上仰或下仰角，正值表示视点在XY平面上方，负值表示视点在XY平面下方。
% MATLAB系统提供了从不同视点绘制三维图形的函数: view(az,el)，az为方位角，el为仰角
%
% 2.浓淡处理shading
shading options %图形对象着色的浓淡处理
% mesh,surf,pcolor,fill和fill3所创建图形非数据点处的着色由shading指令决定。
% options可以取以下三种方式: flat interp faceted---缺省设置 透明控制-alpha(V)
%
%在matlab中，图像通常由数据矩阵和色图矩阵组成。
%图像根据图像着色方法不同，把图像分为三类:
% 1.变址图像
% 2.强度图像
% 3.真彩或RGB图像




















%% 绘图案例 - 按要求绘图

%冒号和linspace的使用场景
% 已知间隔大小,使用冒号
% 已知总共有多少个点使用linspace
t=0:0.1:100; %间隔0.1,输出1000个数字
t=linspace(0,100,1001); %总共输出1001个数字,间隔0.1

L=length(t); %计算t有多少个点
R=rand(1,L)*0.4-0.2   %先得到(0,0.4),在左移0.2
R=(rand(1,L)-0.5)*0.4 %先左移0.5得到(-0.5,0.5),在乘0.4
y1=sin(2*pi*0.01*t)+R %sin函数+随机数
y2=cos(2*pi*0.01*t)+R %cos函数+随机数

t_new=t(201:end)-t(201) %取消前200个点,只取201到最后的点,得到[0,80]
y1_new=y1(201:end)
y2_new=y2(201:end)

data_new=[t_new' y1_new' y2_new'] %通过转置',得到3列801行

%小技巧:查看绘图窗口的放大镜,点击拉框选择可以局部放大

% figure, subplot, plot, stairs, hold on, hold off, xlim, ylim, title, grid, xlabel.
% ylabel, legend, To display Greek letters, like π, read the Text Properties in MATLAB help.
% limit x-axis and yaxis between(0,140)and(-1.5. 1.5).

% Use the same functions above (except figure) to plot the cut-off data at the bottom of the figure
% as shown in Flg. 1(b), The color code for cos(0.02*pi*t) is [0.6 0.7 0.8] (see the help
% for plot and RGB color codes)

figure;
subplot(2,1,1); %图形显示在2行1列的界面内的第一张
plot(t,y1,'red'); %绘图
hold on; %保留前面的绘图继续绘制
plot(t,y2,'blue'); %绘图
title('Original Data','Fontweight','bold'); %加标题; 'Fontweight','bold'用于加粗
xlabel('Time(sec)'); %添加x轴标签
ylabel('Data'); %添加y轴标签
axis([0 140 -1.5 1.5]); %axis([xmin xmax ymin ymax]):设置坐标轴范围
legend('sin(0.02\pit)','cos(0.02\pit)') %图例顺序等同于绘图顺序,'\pi'等同于π
grid on; %绘制网格

subplot(2,1,2);
plot(t_new,y1_new,'green'); %绘图
hold on; %保留前面的绘图继续绘制
plot(t_new,y2_new,'Color',[0.6 0.7 0.8]); %利用RGB颜色绘图
title('Cut-off Data','FontWeight','bold'); %加标题; 'Fontweight','bold'用于加粗
xlabel('Time(sec)'); %添加x轴标签
ylabel('Data'); %添加y轴标签
axis([0 140 -1.5 1.5]); %axis([xmin xmax ymin ymax]):设置坐标轴范围
legend('sin(0.02\pit)','cos(0.02\pit)') %图例顺序等同于绘图顺序,'\pi'等同于π
grid on; %绘制网格





%% 利用Matlab代码和Simulink - 搭建系统并设置控制器和回路

